[1mdiff --git a/download.go b/download.go[m
[1mindex e461395..2a3c739 100644[m
[1m--- a/download.go[m
[1m+++ b/download.go[m
[36m@@ -18,6 +18,14 @@[m [mconst ([m
 	defaultDir        = "go-download"[m
 )[m
 [m
[32m+[m[32m// var ([m
[32m+[m[32m// 	pool = &sync.Pool{[m
[32m+[m[32m// 		New: func() interface{} {[m
[32m+[m[32m// 			return new(File)[m
[32m+[m[32m// 		},[m
[32m+[m[32m// 	}[m
[32m+[m[32m// )[m
[32m+[m
 // ConcurrencyFn ...[m
 type ConcurrencyFn func(contentLength int64) int64[m
 [m
[36m@@ -47,6 +55,9 @@[m [mfunc OpenContext(ctx context.Context, url string, fn ConcurrencyFn) (*File, erro[m
 		fn = defaultConcurrencyFunc[m
 	}[m
 [m
[32m+[m	[32m// f := pool.Get().(*File)[m
[32m+[m	[32m// f.url = url[m
[32m+[m	[32m// f.concurencyFn = fn[m
 	f := &File{[m
 		url:          url,[m
 		concurencyFn: fn,[m
[36m@@ -134,7 +145,7 @@[m [mfunc (f *File) downloadRangeBytes(ctx context.Context) error {[m
 	var err error[m
 	var resume bool[m
 [m
[31m-	f.dir = filepath.Join(os.TempDir(), f.generateSHA1())[m
[32m+[m	[32mf.dir = filepath.Join(os.TempDir(), defaultDir+f.generateSHA1())[m
 [m
 	if _, err = os.Stat(f.dir); os.IsNotExist(err) {[m
 		err = os.Mkdir(f.dir, 0770) // only owner and group have RWX access[m
[36m@@ -346,6 +357,9 @@[m [mfunc (f *File) Close() error {[m
 		}[m
 	}[m
 [m
[32m+[m	[32m// f.readers = f.readers[0:0][m
[32m+[m	[32m// pool.Put(f)[m
[32m+[m
 	return os.RemoveAll(f.dir)[m
 }[m
 [m
